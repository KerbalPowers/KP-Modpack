PART
{
	name = simpson
	module = Part
	author = MiffedStarfish
	MODEL
	{
		model = KerbalPowers/Armory/Parts/Simpson/simpson
	}
	rescaleFactor = 1
	node_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 2
	TechRequired = precisionEngineering
	entryCost = 2100
	cost = 600
	category = none
	bdacategory = Radars
	subcategory = 0
	bulkheadProfiles = srf
	title = SIMPSON Multi-Function Radar
	manufacturer = Onicron
	description = While designing this radar, the engineers initially made some mistakes, made some assumptions that were incorrect, and failed out loud, but the SIMPSON is now ready for market. A solid state AESA radar capable of tracking hundreds of targets, it can perform multiple roles but is optimised as the fire control component of a naval air defence system.
	attachRules = 1,1,1,1,0
	// --- standard part parameters ---
	mass = 1.45
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 3600
 
	MODULE
	{
		name = ModulePartVariants
		baseVariant = LightningRods
		useMultipleDragCubes = false
		VARIANT
		{
			name = LightningRods
			displayName = Lightning Rods
			themeName = LightningRods
			primaryColor = #ffffff
			secondaryColor = #999999
			GAMEOBJECTS
			{
				Base = true
				Base.collider = true
				Dome = true
				Dome.collider = true
				LightningRods = true
				LightningRods.collider = true
			}
		}
		VARIANT
		{
			name = Bare
			displayName = Bare
			themeName = Bare
			primaryColor = #ffffff
			secondaryColor = #ffffff
			GAMEOBJECTS
			{
				Base = true
				Base.collider = true
				Dome = true
				Dome.collider = true
				LightningRods = false
				LightningRods.collider = false
			}
		}
	}
	MODULE
	{
	  	name = ModuleRadar
	
		// -- Section: General Configuration --
		radarName = SIMPSON Multi-Function Radar		// if left empty part.title is used, but advised to set this to a nice printable text
		rwrThreatType = 5				// IMPORTANT, please set correctly:
								// 0 = SAM site radar
								// 1 = Fighter radar (airborne)
								// 2 = AWACS radar (airborne)
								// 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
								// 5 = Detection radar (ground/ship based)
								// 6 = SONAR (ship/submarine based)
		rotationTransformName = rotationTransform
		//turretID = 0					// if needed
		resourceDrain = 1.25				// change to higher values for more capable radars, e.g AESA
	
		// -- Section: Capabilities --
		omnidirectional = true				// false: boresight scan radar
		directionalFieldOfView = 90			// for omni and boresight
		//boresightFOV = 10				// for boresight only
		scanRotationSpeed = 360			// degress per second
		lockRotationSpeed = 360				// only relevant if canLock
		lockRotationAngle = 4
		showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
		multiLockFOV = 120				// only relevant if canLock
		lockAttemptFOV = 2				// only relevant if canLock
	    	maxLocks = 5					//how many targets can be locked/tracked simultaneously. only relevant if canLock
	
		canScan = true					// scanning/detecting targets (volume search)
		canLock = true					// locking/tracking targets (fire control)
	  	canTrackWhileScan = false			// continue scanning while tracking a locked target
	  	canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])
	
	  	minSignalThreshold = 50				// DEPRECATED, NO LONGER USED! use detection float curve!
		//minLockedSignalThreshold = 90			// DEPRECATED, NO LONGER USED! use locktrack float curve!
	
		radarGroundClutterFactor = 1.0			// how much is the radar efficiency reduced to by ground clutter/look-down?
								// 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
								// 1.0 = fully efficient (no difference between air & ground targets)
								// default if unset: 0.25
								// Ground targets, especially ships, already have a massively larger RCS than fighters, hence
								// any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
								// values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.
	
		radarDetectionCurve
		{
		  // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
		  // this defines both min/max range of the radar, and sensitivity/efficiency
		  // it is recommended to define an "assured detection range", at which all craft are detected regardless
		  //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
		  //    key = distance	rcs
	             	key = 0 0 0 0
	                key = 10 0 0 0.04679741
	                key = 25 2 0.1841794 0.1425204
	                key = 50 10 0 0
	                key = 80 10 0 0	//max range 80km, rcs detectable is 30m^2
		}
	
		radarLockTrackCurve
		{
			// same as detectionCurve, just for locking/tracking purpose
			// ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
			//   ECM-jammers & chaff completely ineffective!!
			key = 0 0 0 0
	                key = 10 0 0 0.04679741
	                key = 25 2 0.1841794 0.1425204
	                key = 50 10 0 0
	                key = 80 10 0 0
			// nothing defined here as this radar does not support locking
		}
	}
}
