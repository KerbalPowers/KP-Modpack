PART
{
	// --- general parameters ---
	name = kpaSNOOPR
	module = Part
	author = Spartwo

	// --- asset parameters ---
	MODEL
	{
		model = KerbalPowers/Armory/Parts/Radar/SNOOP-7/SNOOP-R
	}
	rescaleFactor = 1

	// --- node definitions ---
	node_attach = 0.0, 0, 0, 0, -1, 0, 0
	node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1

	// --- editor parameters ---
	TechRequired = precisionEngineering
	entryCost = 6000
	cost = 3000
	category = none
	bdacategory = Radars
	subcategory = 0
	
	attachRules = 1,1,1,1,0 // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	bulkheadProfiles = size0, srf
	
	title = #LOC_KPDynamics_SnoopRotate_title
	manufacturer = #LOC_KPDynamics_Onicron_title
	description = #LOC_KPDynamics_SnoopRotate_description
	tags = #loc_BDArmory_part_bdRadome1_tags 

	// --- standard part parameters ---
	mass = 1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 3600


	MODULE
	{
		name = ModuleRadar

		radarName = #LOC_KPDynamics_SnoopRotate_radar
		rwrThreatType = 5				// IMPORTANT, please set correctly:
							// 0 = SAM site radar
							// 1 = Fighter radar (airborne)
							// 2 = AWACS radar (airborne)
							// 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
							// 5 = Detection radar (ground/ship based)
							// 6 = SONAR (ship/submarine based)
		scanRotationSpeed = 600
		showDirectionWhileScan = true
		rotationTransformName = Rotator

		canScan = true					// scanning/detecting targets (volume search)
		canLock = false					// locking/tracking targets (fire control)
		canRecieveRadarData = true
		canTrackWhileScan = false

		radarGroundClutterFactor = 0.25     //average performance also against surface targets
		radarDetectionCurve
		{
			// floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
			// this defines both min/max range of the radar, and sensitivity/efficiency
			// it is recommended to define an "assured detection range", at which all craft are detected regardless
			//     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
			//		key = distance	rcs
					key = 0.0	0
					key = 10	0	//very good performance at close range, high assured detection range
					key = 15 10   //
					key = 20 15	//good performance at medium range
					key = 30 20
					key = 40 25
					key = 50 30	//average performance at longer range
		}
		radarLockTrackCurve
		{
			// same as detectionCurve, just for locking/tracking purpose
			// ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
			//   ECM-jammers & chaff completely ineffective!!
			//      key = distance	rcs

		}
	  
	}



	MODULE
	{
		name = ModulePartVariants
		primaryColor = #ffffff
		secondaryColor = #000000
		baseVariant = Bare
		useMultipleDragCubes = false
		VARIANT
		{
			name = Bare
			displayName = #LOC_KPDynamics_SnoopRotate_Variant_Bare
			primaryColor = #ffffff
			secondaryColor = #989898
			GAMEOBJECTS
			{
				SNOOP-RCovers = false
				SNOOP-RCables = true
			}
		}	
		VARIANT
		{
			name = Covers
			displayName = #LOC_KPDynamics_SnoopRotate_Variant_Covered
			primaryColor = #ffffff
			secondaryColor = #989898
			GAMEOBJECTS
			{
				SNOOP-RCovers = true
				SNOOP-RCables = false
			}
		}	
	}
}
