// Patches that buff robotics performance and decrease their upfront cost
// Higher Hitpoint values from Panzer1b

//ModuleRoboticServoHinge

@PART[hinge_01] //G-11 Hinge
{
	%crashTolerance = 25
	%cost = 310
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoHinge],0
	{
		%maxMotorOutput = 400
		%traverseVelocityLimits = 1, 100
		%motorizedCostPerDriveUnit = 0.35
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[hinge_01_s] //G-00 Hinge
{
	%crashTolerance = 25
	%cost = 130
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoHinge],0
	{
		%maxMotorOutput = 100
		%traverseVelocityLimits = 1, 150
		%motorizedCostPerDriveUnit = 0.8
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[hinge_03] //G-12L Alligator Hinge
{
	%crashTolerance = 25
	%cost = 410
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoHinge],0
	{
		%maxMotorOutput = 500
		%traverseVelocityLimits = 1, 100
		%motorizedCostPerDriveUnit = 0.33
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[hinge_03_s] //G-01L Alligator Hinge
{
	%crashTolerance = 25
	%cost = 252
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoHinge],0
	{
		%maxMotorOutput = 150
		%traverseVelocityLimits = 1, 150
		%motorizedCostPerDriveUnit = 0.65
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[hinge_04] //G-32W Wide Hinge
{
	%crashTolerance = 25
	%cost = 800
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoHinge],0
	{
		%maxMotorOutput = 1000
		%traverseVelocityLimits = 1, 50
		%motorizedCostPerDriveUnit = 0.3
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

//ModuleRoboticServoPiston

@PART[piston_01] //3P6 Piston
{
	%crashTolerance = 25
	%cost = 355
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoPiston],0
	{
		%maxMotorOutput = 750
		%motorizedCostPerDriveUnit = 0.36
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[piston_02] //1P2 Piston
{
	%crashTolerance = 25
	%cost = 125
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoPiston],0
	{
		%maxMotorOutput = 200
		%motorizedCostPerDriveUnit = 0.75
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

//Telescoping

@PART[piston_03] //3PT Telescoping Piston
{
	%crashTolerance = 25
	%cost = 480
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoPiston],0
	{
		%maxMotorOutput = 750
		%motorizedCostPerDriveUnit = 0.36
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[piston_04] //1P4 Telescoping Piston
{
	%crashTolerance = 25
	%cost = 200
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoPiston],0
	{
		%maxMotorOutput = 200
		%motorizedCostPerDriveUnit = 0.75
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

//ModuleRoboticServoRotor

@PART[rotor_01] //EM16 Rotor
{
	%crashTolerance = 25
	%cost = 75
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 50
		%traverseVelocityLimits = 1, 1000
		%rpmLimit = 1000
		%motorizedCostPerDriveUnit = 1
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotor_01s] //EM16s Rotor
{
	%crashTolerance = 25
	%cost = 75
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 50
		%traverseVelocityLimits = 1, 1000
		%rpmLimit = 1000
		%motorizedCostPerDriveUnit = 1
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotor_02] //EM32 Rotor
{
	%crashTolerance = 25
	%cost = 151
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 150
		%traverseVelocityLimits = 1, 750
		%rpmLimit = 750
		%motorizedCostPerDriveUnit = 0.66
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotor_02s] //EM32S Rotor
{
	%crashTolerance = 25
	%cost =  151 
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 150
		%traverseVelocityLimits = 1, 750
		%rpmLimit = 750
		%motorizedCostPerDriveUnit = 0.66
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotor_03] //EM64 Rotor
{
	%crashTolerance = 25
	%cost = 310
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 600
		%traverseVelocityLimits = 1, 550
		%rpmLimit = 550
		%motorizedCostPerDriveUnit = 0.4
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotor_03s] //EM64S Rotor
{
	%crashTolerance = 25
	%cost = 310
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 600
		%traverseVelocityLimits = 1, 550
		%rpmLimit = 550
		%motorizedCostPerDriveUnit = 0.4
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

//75% reduction for these

@PART[RotorEngine_02] //R121 Turboshaft
{
	%crashTolerance = 15
	%cost = 275
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 300
		%traverseVelocityLimits = 1, 1500
		%rpmLimit = 1500
		%motorizedCostPerDriveUnit = 0.75
		@RESOURCE[LiquidFuel]
		{
			@rate = 0.0075
		}
	}
}

@PART[RotorEngine_03] //R7000 Turboshaft
{
	%crashTolerance = 15
	%cost = 400
	
	@MODULE[ModuleRoboticServoRotor],0
	{
		%maxMotorOutput = 800
		%traverseVelocityLimits = 1, 1000
		%rpmLimit = 1000
		%motorizedCostPerDriveUnit = 0.75
		@RESOURCE[LiquidFuel]
		{
			@rate = 0.0075
		}
	}
}


//ModuleRoboticRotationServo

@PART[rotoServo_00] //M-06 Servo
{
	%crashTolerance = 25
	%cost = 160
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticRotationServo],0
	{
		%maxMotorOutput = 50
		%traverseVelocityLimits = 1, 200
		%motorizedCostPerDriveUnit = 1
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotoServo_02] //F-12 Servo
{
	%crashTolerance = 25
	%cost = 280
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticRotationServo],0
	{
		%maxMotorOutput = 200
		%traverseVelocityLimits = 1, 100
		%motorizedCostPerDriveUnit = 0.6
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotoServo_03] //M-12 Servo
{
	%crashTolerance = 25
	%cost = 35
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticRotationServo],0
	{
		%maxMotorOutput = 500
		%traverseVelocityLimits = 1, 100
		%motorizedCostPerDriveUnit = 0.6
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

@PART[rotoServo_04] //M-25 Servo
{
	%crashTolerance = 25
	%cost = 650
	//Make them more flight Usable
	%maximum_drag = 0.1
	%minimum_drag = 0.1
	%angularDrag = .25
	
	@MODULE[ModuleRoboticRotationServo],0
	{
		%maxMotorOutput = 1500
		%traverseVelocityLimits = 1, 50
		%motorizedCostPerDriveUnit = 0.3
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5
		}
	}
}

